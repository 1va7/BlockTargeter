"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetaTxReceiver__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "InvalidShortString",
        type: "error",
    },
    {
        inputs: [],
        name: "MetaTxSignatureNotMatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "actual",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "currentNonce",
                type: "uint256",
            },
        ],
        name: "NonceTooLow",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "str",
                type: "string",
            },
        ],
        name: "StringTooLong",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [],
        name: "EIP712DomainChanged",
        type: "event",
    },
    {
        inputs: [],
        name: "eip712Domain",
        outputs: [
            {
                internalType: "bytes1",
                name: "fields",
                type: "bytes1",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "verifyingContract",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "uint256[]",
                name: "extensions",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
        ],
        name: "metaTxGetNonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "metaTxPrepare",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct MetaTxReceiver.ForwardRequest",
                name: "",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
        ],
        name: "metaTxPrepareWithNonce",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct MetaTxReceiver.ForwardRequest",
                name: "",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct MetaTxReceiver.ForwardRequest",
                name: "req",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "metaTxVerify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6101606040523480156200001257600080fd5b506040518060400160405280601881526020017f50686174526f6c6c75704d6574615478526563656976657200000000000000008152506040518060400160405280600581526020017f302e302e310000000000000000000000000000000000000000000000000000008152506200009a6000836200013f60201b6200064d1790919060201c565b6101208181525050620000bd6001826200013f60201b6200064d1790919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000fc6200019c60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050620007f4565b600060208351101562000165576200015d83620001f960201b60201c565b905062000196565b826200017c836200026660201b620006911760201c565b60000190816200018d9190620004ea565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620001de95949392919062000642565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200024957826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200024091906200072e565b60405180910390fd5b805181620002579062000784565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f257607f821691505b602082108103620003085762000307620002aa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003727fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000333565b6200037e868362000333565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003cb620003c5620003bf8462000396565b620003a0565b62000396565b9050919050565b6000819050919050565b620003e783620003aa565b620003ff620003f682620003d2565b84845462000340565b825550505050565b600090565b6200041662000407565b62000423818484620003dc565b505050565b5b818110156200044b576200043f6000826200040c565b60018101905062000429565b5050565b601f8211156200049a5762000464816200030e565b6200046f8462000323565b810160208510156200047f578190505b620004976200048e8562000323565b83018262000428565b50505b505050565b600082821c905092915050565b6000620004bf600019846008026200049f565b1980831691505092915050565b6000620004da8383620004ac565b9150826002028217905092915050565b620004f58262000270565b67ffffffffffffffff8111156200051157620005106200027b565b5b6200051d8254620002d9565b6200052a8282856200044f565b600060209050601f8311600181146200056257600084156200054d578287015190505b620005598582620004cc565b865550620005c9565b601f19841662000572866200030e565b60005b828110156200059c5784890151825560018201915060208501945060208101905062000575565b86831015620005bc5784890151620005b8601f891682620004ac565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620005e681620005d1565b82525050565b620005f78162000396565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200062a82620005fd565b9050919050565b6200063c816200061d565b82525050565b600060a082019050620006596000830188620005db565b620006686020830187620005db565b620006776040830186620005db565b620006866060830185620005ec565b62000695608083018462000631565b9695505050505050565b600082825260208201905092915050565b60005b83811015620006d0578082015181840152602081019050620006b3565b60008484015250505050565b6000601f19601f8301169050919050565b6000620006fa8262000270565b6200070681856200069f565b935062000718818560208601620006b0565b6200072381620006dc565b840191505092915050565b600060208201905081810360008301526200074a8184620006ed565b905092915050565b600081519050919050565b6000819050602082019050919050565b60006200077b8251620005d1565b80915050919050565b6000620007918262000752565b826200079d846200075d565b9050620007aa816200076d565b92506020821015620007ed57620007e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000333565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051611aa96200084f60003960006103b30152600061037f01526000610b5d01526000610b3c015260006107f80152600061084e015260006108770152611aa96000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806322dae16c1461005c5780635232f0d71461008d57806384b0196e146100be578063bbbfe446146100e2578063f4034a9614610112575b600080fd5b61007660048036038101906100719190610e19565b610142565b604051610084929190610fa4565b60405180910390f35b6100a760048036038101906100a29190610fd4565b61030b565b6040516100b5929190610fa4565b60405180910390f35b6100c661036c565b6040516100d99796959493929190611191565b60405180910390f35b6100fc60048036038101906100f79190611239565b61046e565b60405161010991906112d0565b60405180910390f35b61012c600480360381019061012791906112eb565b610604565b6040516101399190611318565b60405180910390f35b61014a610cdf565b6000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548310156102115782600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517f045f356c000000000000000000000000000000000000000000000000000000008152600401610208929190611333565b60405180910390fd5b600060405180606001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200185815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250905060006102f87f2c521d146a6f6c09462cb178367b028f1718b1f01d7995bb405dae702c2bee7d89878a8a6040516102c292919061139b565b60405180910390206040516020016102dd94939291906113b4565b6040516020818303038152906040528051906020012061069b565b9050818193509350505094509492505050565b610313610cdf565b6000610360858585600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610142565b91509150935093915050565b6000606080600080600060606103ac60007f00000000000000000000000000000000000000000000000000000000000000006106b590919063ffffffff16565b6103e060017f00000000000000000000000000000000000000000000000000000000000000006106b590919063ffffffff16565b46306000801b600067ffffffffffffffff811115610401576104006113f9565b5b60405190808252806020026020018201604052801561042f5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60008061055784848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506105497f2c521d146a6f6c09462cb178367b028f1718b1f01d7995bb405dae702c2bee7d8860000160208101906104f091906112eb565b89602001358a80604001906105059190611437565b60405161051392919061139b565b604051809103902060405160200161052e94939291906113b4565b6040516020818303038152906040528051906020012061069b565b61076590919063ffffffff16565b905084602001356002600087600001602081019061057591906112eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156105fa57508460000160208101906105cb91906112eb565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000602083511015610669576106628361078c565b905061068b565b8261067383610691565b600001908161068291906116a6565b5060ff60001b90505b92915050565b6000819050919050565b60006106ae6106a86107f4565b836108ab565b9050919050565b606060ff60001b83146106d2576106cb836108ec565b905061075f565b8180546106de906114c9565b80601f016020809104026020016040519081016040528092919081815260200182805461070a906114c9565b80156107575780601f1061072c57610100808354040283529160200191610757565b820191906000526020600020905b81548152906001019060200180831161073a57829003601f168201915b505050505090505b92915050565b60008060006107748585610960565b91509150610781816109b1565b819250505092915050565b600080829050601f815111156107d957826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016107d09190611778565b60405180910390fd5b8051816107e5906117bf565b60001c1760001b915050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561087057507f000000000000000000000000000000000000000000000000000000000000000046145b1561089d577f000000000000000000000000000000000000000000000000000000000000000090506108a8565b6108a5610b17565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b606060006108f983610bad565b90506000602067ffffffffffffffff811115610918576109176113f9565b5b6040519080825280601f01601f19166020018201604052801561094a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060418351036109a15760008060006020860151925060408601519150606086015160001a905061099587828585610bfd565b945094505050506109aa565b60006002915091505b9250929050565b600060048111156109c5576109c4611826565b5b8160048111156109d8576109d7611826565b5b0315610b1457600160048111156109f2576109f1611826565b5b816004811115610a0557610a04611826565b5b03610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c906118a1565b60405180910390fd5b60026004811115610a5957610a58611826565b5b816004811115610a6c57610a6b611826565b5b03610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa39061190d565b60405180910390fd5b60036004811115610ac057610abf611826565b5b816004811115610ad357610ad2611826565b5b03610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a9061199f565b60405180910390fd5b5b50565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610b929594939291906119bf565b60405160208183030381529060405280519060200120905090565b60008060ff8360001c169050601f811115610bf4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610c38576000600391509150610cd6565b600060018787878760405160008152602001604052604051610c5d9493929190611a2e565b6020604051602081039080840390855afa158015610c7f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ccd57600060019250925050610cd6565b80600092509250505b94509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4b82610d20565b9050919050565b610d5b81610d40565b8114610d6657600080fd5b50565b600081359050610d7881610d52565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610da357610da2610d7e565b5b8235905067ffffffffffffffff811115610dc057610dbf610d83565b5b602083019150836001820283011115610ddc57610ddb610d88565b5b9250929050565b6000819050919050565b610df681610de3565b8114610e0157600080fd5b50565b600081359050610e1381610ded565b92915050565b60008060008060608587031215610e3357610e32610d16565b5b6000610e4187828801610d69565b945050602085013567ffffffffffffffff811115610e6257610e61610d1b565b5b610e6e87828801610d8d565b93509350506040610e8187828801610e04565b91505092959194509250565b610e9681610d40565b82525050565b610ea581610de3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee5578082015181840152602081019050610eca565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0d82610eab565b610f178185610eb6565b9350610f27818560208601610ec7565b610f3081610ef1565b840191505092915050565b6000606083016000830151610f536000860182610e8d565b506020830151610f666020860182610e9c565b5060408301518482036040860152610f7e8282610f02565b9150508091505092915050565b6000819050919050565b610f9e81610f8b565b82525050565b60006040820190508181036000830152610fbe8185610f3b565b9050610fcd6020830184610f95565b9392505050565b600080600060408486031215610fed57610fec610d16565b5b6000610ffb86828701610d69565b935050602084013567ffffffffffffffff81111561101c5761101b610d1b565b5b61102886828701610d8d565b92509250509250925092565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61106981611034565b82525050565b600081519050919050565b600082825260208201905092915050565b60006110968261106f565b6110a0818561107a565b93506110b0818560208601610ec7565b6110b981610ef1565b840191505092915050565b6110cd81610de3565b82525050565b6110dc81610d40565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061111a8383610e9c565b60208301905092915050565b6000602082019050919050565b600061113e826110e2565b61114881856110ed565b9350611153836110fe565b8060005b8381101561118457815161116b888261110e565b975061117683611126565b925050600181019050611157565b5085935050505092915050565b600060e0820190506111a6600083018a611060565b81810360208301526111b8818961108b565b905081810360408301526111cc818861108b565b90506111db60608301876110c4565b6111e860808301866110d3565b6111f560a0830185610f95565b81810360c08301526112078184611133565b905098975050505050505050565b600080fd5b6000606082840312156112305761122f611215565b5b81905092915050565b60008060006040848603121561125257611251610d16565b5b600084013567ffffffffffffffff8111156112705761126f610d1b565b5b61127c8682870161121a565b935050602084013567ffffffffffffffff81111561129d5761129c610d1b565b5b6112a986828701610d8d565b92509250509250925092565b60008115159050919050565b6112ca816112b5565b82525050565b60006020820190506112e560008301846112c1565b92915050565b60006020828403121561130157611300610d16565b5b600061130f84828501610d69565b91505092915050565b600060208201905061132d60008301846110c4565b92915050565b600060408201905061134860008301856110c4565b61135560208301846110c4565b9392505050565b600081905092915050565b82818337600083830152505050565b6000611382838561135c565b935061138f838584611367565b82840190509392505050565b60006113a8828486611376565b91508190509392505050565b60006080820190506113c96000830187610f95565b6113d660208301866110d3565b6113e360408301856110c4565b6113f06060830184610f95565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261145457611453611428565b5b80840192508235915067ffffffffffffffff8211156114765761147561142d565b5b60208301925060018202360383131561149257611491611432565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114e157607f821691505b6020821081036114f4576114f361149a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261155c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261151f565b611566868361151f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115a361159e61159984610de3565b61157e565b610de3565b9050919050565b6000819050919050565b6115bd83611588565b6115d16115c9826115aa565b84845461152c565b825550505050565b600090565b6115e66115d9565b6115f18184846115b4565b505050565b5b818110156116155761160a6000826115de565b6001810190506115f7565b5050565b601f82111561165a5761162b816114fa565b6116348461150f565b81016020851015611643578190505b61165761164f8561150f565b8301826115f6565b50505b505050565b600082821c905092915050565b600061167d6000198460080261165f565b1980831691505092915050565b6000611696838361166c565b9150826002028217905092915050565b6116af8261106f565b67ffffffffffffffff8111156116c8576116c76113f9565b5b6116d282546114c9565b6116dd828285611619565b600060209050601f83116001811461171057600084156116fe578287015190505b611708858261168a565b865550611770565b601f19841661171e866114fa565b60005b8281101561174657848901518255600182019150602085019450602081019050611721565b86831015611763578489015161175f601f89168261166c565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152611792818461108b565b905092915050565b6000819050602082019050919050565b60006117b68251610f8b565b80915050919050565b60006117ca82610eab565b826117d48461179a565b90506117df816117aa565b9250602082101561181f5761181a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261151f565b831692505b5050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061188b60188361107a565b915061189682611855565b602082019050919050565b600060208201905081810360008301526118ba8161187e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006118f7601f8361107a565b9150611902826118c1565b602082019050919050565b60006020820190508181036000830152611926816118ea565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061198960228361107a565b91506119948261192d565b604082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b600060a0820190506119d46000830188610f95565b6119e16020830187610f95565b6119ee6040830186610f95565b6119fb60608301856110c4565b611a0860808301846110d3565b9695505050505050565b600060ff82169050919050565b611a2881611a12565b82525050565b6000608082019050611a436000830187610f95565b611a506020830186611a1f565b611a5d6040830185610f95565b611a6a6060830184610f95565b9594505050505056fea264697066735822122003b3c7f8fef62fd500d6b89658b19c462244308b45ff208af45ec0820237d3f564736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MetaTxReceiver__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MetaTxReceiver__factory = MetaTxReceiver__factory;
MetaTxReceiver__factory.bytecode = _bytecode;
MetaTxReceiver__factory.abi = _abi;
